USE DATABASE NUMAAN_DATABASE;

##TASK 1


CREATE OR REPLACE TABLE SHOPPING_HISTORY(
PRODUCT VARCHAR(50) NOT NULL,
QUANTITY INT NOT NULL,
UNIT_PRICE INT NOT NULL);

SELECT * FROM SHOPPING_HISTORY;

INSERT INTO SHOPPING_HISTORY VALUES 
('MILK', 1, 25),
('BREAD', 2, 70),
('JAM', 3, 45),
('CHIPS',4, 60),
('BICUITS', 5, 35);


SELECT PRODUCT,QUANTITY, (QUANTITY*UNIT_PRICE) AS TOTAL_PRICE  FROM SHOPPING_HISTORY
ORDER BY PRODUCT DESC;


--TASK---

CREATE OR REPLACE TABLE PHONES
(NAME VARCHAR(50) NOT NULL UNIQUE,
PHONE_NUMBER INT NOT NULL UNIQUE);

CREATE OR REPLACE TABLE CALLS(
ID INT NOT NULL,
CALLER INT NOT NULL,
CALLEE INT NOT NULL,
DURATION INT NOT NULL,
UNIQUE(ID));

INSERT INTO PHONES VALUES
('JACK',1234),
('LENA', 3333),
('MARK', 9999),
('ANNA', 7582);

SELECT * FROM PHONES;

INSERT INTO CALLS VALUES 
(25,1234,7582,8),
(7,9999,7582,1),
(18,9999,3333,4),
(2,7582,3333,3),
(3,3333,1234,1),
(21,3333,1234,1);

SELECT * FROM CALLS;

SELECT PHONES.NAME AS NAME FROM CALLS JOIN PHONES ON PHONES.PHONE_NUMBER = CALLS.CALLER
GROUP BY PHONES.NAME 
HAVING SUM(CALLS.DURATION)>=10
ORDER BY PHONES.NAME ASC;


---TASK3---
CREATE TABLE TRANSACTION(
AMOUNT INT NOT NULL,
DATE_T DATE NOT NULL);

INSERT INTO TRANSACTION VALUES
(1000, '2020-01-06'),
(-10, '2020-01-15'),
(-75, '2020-01-14'),
(-5, '2020-01-12'),
(-4, '2020-01-11'),
(2000, '2020-03-12'),
(-75, '2020-03-13'),
(-20, '2020-03-14'),
(40, '2020-03-15'),
(-50, '2020-03-17'),
(200, '2020-10-10'),
(-200, '2020-10-10');

SELECT * FROM TRANSACTION;

SELECT SUM(AMOUNT)-55 FROM TRANSACTION ;
